#!/bin/bash
set -euo pipefail

linux_zen_base() {
    clear
    basestrap /mnt terminus-font linux-zen base iptables-nft base-devel mkinitcpio openrc dbus dbus-openrc elogind-openrc linux-firmware linux-zen-headers dialog acpid linux-api-headers flatpak acpid-openrc
    fast-chroot /mnt flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
}

linux_lts_base() {
    clear
    basestrap /mnt terminus-font linux-lts base iptables-nft base-devel mkinitcpio openrc dbus dbus-openrc elogind-openrc linux-firmware linux-lts-headers dialog acpid linux-api-headers flatpak acpid-openrc
    fast-chroot /mnt flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
}

linux_base() {
    clear
    basestrap /mnt terminus-font linux base iptables-nft base-devel mkinitcpio openrc dbus dbus-openrc elogind-openrc linux-firmware linux-headers dialog acpid linux-api-headers flatpak acpid-openrc
    fast-chroot /mnt flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
}

# Диалог выбора ядра
boxbase=$(dialog --title "Выберите ядро" --menu "Пакеты" 15 50 5 \
    1 "linux-zen" \
    2 "linux-lts" \
    3 "linux" \
    3>&1 1>&2 2>&3 3>&-)

case $? in
    0)
        case $boxbase in
            1) linux_zen_base ;;
            2) linux_lts_base ;;
            3) linux_base ;;
            *) echo "Неверный выбор"; exit 1 ;;
        esac
        ;;
    *)
        echo "Выбор отменен"
        exit 1
        ;;
esac
################################################################################
# Создание файлов OS release
cat > /mnt/usr/lib/os-release << 'OS_EOF'
NAME="Quasar Linux"
PRETTY_NAME="Quasar Linux (Artix base)"
ID=quasar
ID_LIKE=artix
ANACONDA_ID="quasar"
VERSION="REV-1"
VERSION_ID="1.0"
BUILD_ID="rolling"
ANSI_COLOR="0;36"
HOME_URL="https://b-e-n-z1342.github.io"
LOGO=quasar-logo
OS_EOF

cat > /mnt/etc/lsb-release << 'LSB_EOF'
DISTRIB_ID=Quasar
DISTRIB_RELEASE=1.0
DISTRIB_DESCRIPTION="Quasar Linux"
DISTRIB_CODENAME=rolling
LSB_EOF
###############################################################################
# Принудительная настройка issue
echo "Quasar Linux \\r \\l" > /mnt/etc/issue
echo "Quasar Linux" > /mnt/etc/issue.net
echo "Welcome to Quasar Linux!" > /mnt/etc/motd

sleep 5
clear
echo "Активация сервисов"
mount --types proc /proc /mnt/proc
mount --rbind /sys /mnt/sys
mount --rbind /dev /mnt/dev
mount --rbind /run /mnt/run

fstabgen -U /mnt >> /mnt/etc/fstab
# Активация сервисов
######################################################################################
# dbus

if fast-chroot /mnt rc-update add dbus default; then
    echo "dbus успешно добавлен в автозагрузку"
else
    echo "Ошибка, устанавливаем dbus..."
    fast-chroot /mnt pacman -S dbus dbus-openrc
    fast-chroot /mnt rc-update add dbus default
fi
# Устанавливает бренд "QuasarLinux" в OpenRC целевой системы
# Предназначен для запуска из установщика (целевая ФС смонтирована в /mnt)


TARGET_ROOT="/mnt"
OPENRC_BIN="${TARGET_ROOT}/sbin/openrc"

OLD_NAME="Artix Linux"
NEW_NAME="QuasarLinux"

# Проверка длины — критически важно!
if [ ${#OLD_NAME} -ne ${#NEW_NAME} ]; then
    echo "ОШИБКА: длина '$OLD_NAME' (${#OLD_NAME}) != '$NEW_NAME' (${#NEW_NAME})"
    echo "   Замена отменена — возможна порча бинарника!"
    exit 1
fi

# Проверяем, существует ли openrc в целевой системе
if [ ! -f "$OPENRC_BIN" ]; then
    echo "$OPENRC_BIN не найден. Пропуск брендирования."
    exit 0
fi

echo " Поиск '$OLD_NAME' в $OPENRC_BIN..."

# Ищем все вхождения
matches=$(grep -a -b "$OLD_NAME" "$OPENRC_BIN" 2>/dev/null || true)

if [ -z "$matches" ]; then
    echo "'$OLD_NAME' не найден — возможно, уже заменён или используется другой дистрибутив."
    exit 0
fi

# Создаём бэкап (только если его ещё нет)
BACKUP="${OPENRC_BIN}.quasar.bak"
if [ ! -f "$BACKUP" ]; then
    echo " Создаю бэкап: ${BACKUP##*/}"
    cp "$OPENRC_BIN" "$BACKUP"
fi

# Заменяем каждое вхождение
echo "Замена на '$NEW_NAME'..."
echo "$matches" | while IFS=: read -r offset rest; do
    if [ -n "$offset" ]; then
        # Записываем новую строку + нулевой байт (ровно столько же байт, сколько было)
        printf '%s\0' "$NEW_NAME" | dd of="$OPENRC_BIN" bs=1 seek="$offset" conv=notrunc 2>/dev/null
        echo "   → Позиция $offset обновлена"
    fi
done

echo  "Брендирование завершено: OpenRC теперь говорит '$NEW_NAME' при загрузке."

######################################################################################
#  udev

if fast-chroot /mnt rc-update add udev default; then
    echo "udev успешно добавлен в автозагрузку"
else
    echo "Ошибка, устанавливаем udev..."
    fast-chroot /mnt pacman -S udev lib32-udev || fast-chroot /mnt pacman -S udev
    fast-chroot /mnt rc-update add udev default
fi

######################################################################################
# elogind

if fast-chroot /mnt rc-update add elogind default; then
    echo "elogind успешно добавлен в автозагрузку"
else
    echo "Ошибка, устанавливаем elogind..."
    fast-chroot /mnt pacman -S elogind elogind-openrc
    fast-chroot /mnt rc-update add elogind default
fi

########################################################################################
# acpid

if fast-chroot /mnt rc-update add acpid default; then
    echo "acpid успешно добавлен в автозагрузку"
else
    echo "Ошибка, устанавливаем acpid..."
    fast-chroot /mnt pacman -S acpid acpid-openrc
    fast-chroot /mnt rc-update add acpid default
fi

#########################################################################################
# Копирование конфигурационных файлов

if [ -f /installer/configs/pacman.conf ]; then
    rm /mnt/etc/pacman.conf
    cp /installer/configs/pacman.conf /mnt/etc/
else
    echo "Предупреждение: pacman.conf не найден"
fi

#########################################################################################
# Копирование post-инсталляционных скриптов
if [ -d /installer/post ]; then
    cp -r /installer/post /mnt/
fi

# Копирование региональных настроек
if [ -d /installer/regions ]; then
    cp -r /installer/regions /mnt/
fi
#########################################################################################

# Убираем автогенерацию motd
if [ -d /mnt/etc/update-motd.d/ ]; then
    rm -rf /mnt/etc/update-motd.d/
fi

########################################################################################
# Симлинк для совместимости
ln -sf /usr/lib/os-release /mnt/etc/os-release 2>/dev/null || true

##########################################################################################

# Защита системных файлов (только если они существуют)
[ -f /mnt/usr/lib/os-release ] && chattr +i /mnt/usr/lib/os-release 2>/dev/null || true
[ -f /mnt/etc/lsb-release ] && chattr +i /mnt/etc/lsb-release 2>/dev/null || true

###########################################################################################
# полная смена названия
#!/bin/sh
# Устанавливает бренд "QuasarLinux" в OpenRC целевой системы
# Предназначен для запуска из установщика (целевая ФС смонтирована в /mnt)

set -e

TARGET_ROOT="/mnt"
OPENRC_BIN="${TARGET_ROOT}/sbin/openrc"

OLD_NAME="Artix Linux"
NEW_NAME="QuasarLinux"

# Проверка длины — критически важно!
if [ ${#OLD_NAME} -ne ${#NEW_NAME} ]; then
    echo "ОШИБКА: длина '$OLD_NAME' (${#OLD_NAME}) != '$NEW_NAME' (${#NEW_NAME})"
    echo "   Замена отменена — возможна порча бинарника!"
    exit 1
fi

# Проверяем, существует ли openrc в целевой системе
if [ ! -f "$OPENRC_BIN" ]; then
    echo "- $OPENRC_BIN не найден. Пропуск брендирования."
    exit 0
fi

echo "Поиск '$OLD_NAME' в $OPENRC_BIN..."

# Ищем все вхождения
matches=$(grep -a -b "$OLD_NAME" "$OPENRC_BIN" 2>/dev/null || true)

if [ -z "$matches" ]; then
    echo "+ '$OLD_NAME' не найден — возможно, уже заменён или используется другой дистрибутив."
    exit 0
fi

# Создаём бэкап (только если его ещё нет)
BACKUP="${OPENRC_BIN}.quasar.bak"
if [ ! -f "$BACKUP" ]; then
    echo "Создаю бэкап: ${BACKUP##*/}"
    cp "$OPENRC_BIN" "$BACKUP"
fi

# Заменяем каждое вхождение
echo "Замена на '$NEW_NAME'..."
echo "$matches" | while IFS=: read -r offset rest; do
    if [ -n "$offset" ]; then
        # Записываем новую строку + нулевой байт (ровно столько же байт, сколько было)
        printf '%s\0' "$NEW_NAME" | dd of="$OPENRC_BIN" bs=1 seek="$offset" conv=notrunc 2>/dev/null
        echo "   → Позиция $offset обновлена"
    fi
done

echo "Брендирование завершено: OpenRC теперь говорит '$NEW_NAME' при загрузке."

echo "Базовая установка завершена!"
