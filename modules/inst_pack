#!/bin/bash
set -euo pipefail

# Список пакетов: "tag" "отображаемое имя" "on/off"
packages=(
  1 "htop" off
  2 "mc" off
  3 "nano" on
  4 "vim" on
  5 "neovim" off
  6 "ranger" off
  7 "lynx" off
  8 "w3m" off
  9 "curl" on
 10 "wget" on
 11 "git" on
 12 "ncdu" off
 13 "tmux" off
 14 "screen" off
 15 "nmap" off
 16 "irssi" off
 17 "mutt" off
 18 "rtorrent" off
 19 "ffmpeg" off
 20 "unzip" off
 21 "zip" off
 22 "go" off
 23 "qt6" off
 24 "rsync" off
 25 "sysstat" off
 26 "cmus" off
 27 "ncmpcpp" off
 28 "newsboat" off
 29 "fzf" off
 30 "gtk4" on
 31 "gtk3" on
 32 "gtk2" off
 33 "qt5" on
 34 "docker" off
 35 "docker-openrc" off
)

# Выбор пакетов через dialog
selected=$(dialog --checklist "Выберите нужные пакеты:" 30 50 5 \
  "${packages[@]}" 3>&1 1>&2 2>&3 3>&-)

clear
echo "Вы выбрали: $selected"

# Формируем список имён пакетов
install_list=()
for num in $selected; do
  num=$(echo "$num" | tr -d '"')
  pkg_name=${packages[$((num * 3 - 2))]}
  install_list+=("$pkg_name")
done

# Устанавливаем выбранные пакеты + NetworkManager и его OpenRC-интеграцию
if [ ${#install_list[@]} -gt 0 ]; then
  fast-chroot /mnt pacman -S --noconfirm "${install_list[@]}" networkmanager networkmanager-openrc
else
  fast-chroot /mnt pacman -S --noconfirm networkmanager networkmanager-openrc
fi

fast-chroot /mnt rc-update add networkmanager default

clear
echo "Определение видеокарты..."
sleep 2
gpu_info=$(lspci -nn | grep -i 'VGA\|3D\|Display' | head -1)

if echo "$gpu_info" | grep -qi "AMD"; then
    echo "Обнаружена видеокарта AMD"
    fast-chroot /mnt pacman -S --noconfirm mesa vulkan-radeon libva-mesa-driver mesa-vdpau

elif echo "$gpu_info" | grep -qi "Intel"; then
    echo "Обнаружена видеокарта Intel"
    fast-chroot /mnt pacman -S --noconfirm mesa vulkan-intel intel-media-driver libva-intel-driver

elif echo "$gpu_info" | grep -qi "NVIDIA"; then
    echo "Обнаружена видеокарта NVIDIA"
    echo "!!! NVIDIA драйвера могут быть не стабильны и иметь проблемы с Wayland !!!"
    sleep 5
    fast-chroot /mnt pacman -S --noconfirm nvidia nvidia-utils nvidia-settings lib32-nvidia-utils

elif echo "$gpu_info" | grep -qi "QXL"; then
    echo "Обнаружена виртуальная видеокарта QXL (QEMU)"
    fast-chroot /mnt pacman -S --noconfirm xf86-video-qxl mesa qemu-guest-agent
    fast-chroot /mnt rc-update add qemu-guest-agent default

elif echo "$gpu_info" | grep -qi "Virtio"; then
    echo "Обнаружена виртуальная видеокарта Virtio (QEMU/KVM)"
    fast-chroot /mnt pacman -S --noconfirm xf86-video-virtio mesa qemu-guest-agent
    fast-chroot /mnt rc-update add qemu-guest-agent default

else
    echo "Видеокарта не определена, устанавливаю базовые драйверы"
    echo "Осторожно: низкая производительность!"
    sleep 3
    fast-chroot /mnt pacman -S --noconfirm mesa xf86-video-vesa xf86-video-fbdev
fi

echo "Установка завершена."
