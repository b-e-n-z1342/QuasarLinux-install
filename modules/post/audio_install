#!/bin/bash
audio="$1"
set -euo pipefail

get_username() {
    # Безопасное получение имени пользователя
    if [ -n "$SUDO_USER" ]; then
        echo "$SUDO_USER"
    elif [ -n "$USER" ]; then
        echo "$USER"
    else
        whoami
    fi
}

pipewire_sound() {
    clear
    echo "Установка PipeWire..."

    # Удаляем конфликтующие пакеты
    sudo pacman -Rdd jack2 --noconfirm 2>/dev/null || true

    # Безопасная установка PipeWire
    sudo pacman -S --noconfirm --needed \
        pipewire lib32-pipewire \
        pipewire-alsa pipewire-pulse pipewire-jack \
        wireplumber pipewire-audio \
        pipewire-openrc pipewire-pulse-openrc

    clear

    # Создаем службы OpenRC
    sudo mkdir -p /etc/init.d

    sudo tee /etc/init.d/pipewire > /dev/null << 'EOF'
#!/sbin/openrc-run

command="/usr/bin/pipewire"
command_args=""
pidfile="/run/${RC_SVCNAME}.pid"

depend() {
    need dbus
    need elogind
    after dbus
    after elogind
}
EOF

    sudo tee /etc/init.d/wireplumber > /dev/null << 'EOF'
#!/sbin/openrc-run

command="/usr/bin/wireplumber"
command_args=""
pidfile="/run/${RC_SVCNAME}.pid"

depend() {
    need pipewire
    need dbus
    need elogind
    after pipewire
}
EOF

    # Универсальный конфиг ALSA
    sudo tee /etc/asound.conf > /dev/null << 'EOF'
defaults.pcm.card 0
defaults.ctl.card 0

pcm.!default {
    type plug
    slave.pcm {
        type pipewire
    }
}

ctl.!default {
    type pipewire
}
EOF

    # Пользовательский конфиг
    tee ~/.asoundrc > /dev/null << 'EOF'
pcm.!default {
    type plug
    slave.pcm "pipewire"
}

ctl.!default {
    type pipewire
}
EOF

    # Дополнительные утилиты
    sudo pacman -S --noconfirm pavucontrol

    # Права и службы
    sudo chmod +x /etc/init.d/pipewire
    sudo chmod +x /etc/init.d/wireplumber
    sudo rc-update add pipewire default
    sudo rc-update add wireplumber default

    local username=$(get_username)


    sudo usermod -aG audio "$username"
    cat >> ~/.bash_profile << EOF
if test -z "$XDG_RUNTIME_DIR"; then
    export XDG_RUNTIME_DIR=$(mktemp -d /tmp/$(id -u)-runtime-dir.XXX)
fi
exec dbus-launch --exit-with-session
pipewire & pipewire-pulse & wireplumber &
EOF

    echo "PipeWire установлен и настроен"
}

pulseaudio_sound() {
    clear
    echo "Установка PulseAudio..."

    # Аккуратно удаляем PipeWire пакеты
    local pipewire_packages=(
        "pipewire" "pipewire-pulse" "pipewire-jack"
        "wireplumber" "pipewire-alsa" "lib32-pipewire"
    )

    for pkg in "${pipewire_packages[@]}"; do
        if pacman -Q "$pkg" &>/dev/null; then
            echo "Удаляем $pkg"
            sudo pacman -Rdd --noconfirm "$pkg" 2>/dev/null || true
        fi
    done

    # Устанавливаем PulseAudio
    sudo pacman -S --noconfirm --needed \
        pulseaudio pulseaudio-alsa \
        pulseaudio-bluetooth pulseaudio-jack

    # Настройка службы
    if [ -d /etc/init.d ]; then
        sudo rc-update add pulseaudio default 2>/dev/null || true
    fi

    echo "PulseAudio установлен"
}

jack_sound() {
    clear
    echo "Установка JACK2..."

    # Удаляем PipeWire
    local pipewire_packages=(
        "pipewire" "pipewire-pulse" "pipewire-jack"
        "wireplumber" "pipewire-alsa" "lib32-pipewire"
    )

    for pkg in "${pipewire_packages[@]}"; do
        if pacman -Q "$pkg" &>/dev/null; then
            echo "Удаляем $pkg"
            sudo pacman -Rdd --noconfirm "$pkg" 2>/dev/null || true
        fi
    done

    # Устанавливаем JACK
    sudo pacman -S --noconfirm --needed \
        jack2 jack2-dbus lib32-jack2 calf

    echo "JACK2 установлен"
}

# Проверка аргументов
if [ -z "$audio" ]; then
    echo "Использование: $0 {pipewire|pulseaudio|jack}"
    exit 1
fi

case "$audio" in
    pipewire) pipewire_sound ;;
    pulseaudio) pulseaudio_sound ;;
    jack) jack_sound ;;
    *)
        echo "Неизвестный звуковой сервер: $audio"
        echo "Доступные варианты: pipewire, pulseaudio, jack"
        exit 1
        ;;
esac
